const additionalOptions = document.getElementById("additionalOptions");
const addDoctorBtn = document.getElementById("addDoctorBtn");
const updateBtn = document.getElementById("updateBtn");
const doctorSection = document.getElementById("doctorSection");

const allDoctors = ["Dr. A Sharma", "Dr. B Reddy", "Dr. C Rao", "Dr. D Kumar"];
let usedDoctors = [];

// Directly show the admin panel (optional, depends on backend auth success)
additionalOptions.classList.remove("hidden");
addDoctorBlock(); // Show initial doctor entry

addDoctorBtn.addEventListener("click", addDoctorBlock);

function addDoctorBlock() {
  const availableDoctors = allDoctors.filter(doc => !usedDoctors.includes(doc));
  if (availableDoctors.length === 0) {
    alert("All doctors have been assigned!");
    return;
  }

  const div = document.createElement("div");
  div.classList.add("doctor-block");

  const doctorSelect = document.createElement("select");
  doctorSelect.required = true;
  const defaultOption = document.createElement("option");
  defaultOption.text = "Select Doctor";
  defaultOption.value = "";
  doctorSelect.appendChild(defaultOption);

  availableDoctors.forEach(doc => {
    const opt = document.createElement("option");
    opt.value = doc;
    opt.text = doc;
    doctorSelect.appendChild(opt);
  });

  const startLabel = document.createElement("label");
  startLabel.textContent = "Start Time:";
  const startInput = document.createElement("input");
  startInput.type = "time";
  startInput.required = true;

  const endLabel = document.createElement("label");
  endLabel.textContent = "End Time:";
  const endInput = document.createElement("input");
  endInput.type = "time";
  endInput.required = true;

  doctorSelect.addEventListener("change", () => {
    const selected = doctorSelect.value;
    if (selected && !usedDoctors.includes(selected)) {
      usedDoctors.push(selected);
      updateDoctorDropdowns();
    }
  });

  div.appendChild(doctorSelect);
  div.appendChild(startLabel);
  div.appendChild(startInput);
  div.appendChild(endLabel);
  div.appendChild(endInput);

  doctorSection.appendChild(div);
}

function updateDoctorDropdowns() {
  const selects = doctorSection.querySelectorAll("select");
  selects.forEach(select => {
    const currentValue = select.value;
    select.innerHTML = ""; // clear
    const defaultOption = document.createElement("option");
    defaultOption.value = "";
    defaultOption.text = "Select Doctor";
    select.appendChild(defaultOption);

    allDoctors.forEach(doc => {
      if (!usedDoctors.includes(doc) || doc === currentValue) {
        const opt = document.createElement("option");
        opt.value = doc;
        opt.text = doc;
        if (doc === currentValue) opt.selected = true;
        select.appendChild(opt);
      }
    });
  });
}

updateBtn.addEventListener("click", () => {
  const beds = document.getElementById("beds").value;
  const doctorsInfo = [];
  const blocks = doctorSection.querySelectorAll(".doctor-block");

  blocks.forEach(block => {
    const select = block.querySelector("select");
    const start = block.querySelector('input[type="time"]:first-of-type').value;
    const end = block.querySelector('input[type="time"]:last-of-type').value;
    if (select.value && start && end) {
      doctorsInfo.push({
        doctor: select.value,
        start,
        end
      });
    }
  });

  if (!beds || doctorsInfo.length === 0) {
    alert("Please fill in all required fields.");
    return;
  }
  localStorage.setItem("doctorTimings", JSON.stringify(doctorsInfo));
  // Send to backend
  fetch("/updateHospitalInfo", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      hospitalName: document.getElementById("hospital").value,
      beds,
      doctors: doctorsInfo
    })
  })
    .then(res => res.json())
.then(data => {
  // Save doctor timings to localStorage for use in apollo.html
  localStorage.setItem("doctorTimings", JSON.stringify(doctorsInfo));
  alert("Updated successfully: " + data.message);

  // Redirect to apollo.html
   // adjust path if needed
})

    .catch(err => {
      alert("Error updating: " + err.message);
    });
});








